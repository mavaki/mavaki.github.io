<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://mavaki.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://mavaki.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-07-08T12:36:32+00:00</updated><id>https://mavaki.github.io/feed.xml</id><title type="html">blank</title><subtitle>My simple, happy website. </subtitle><entry><title type="html">third-party development boards in Arduino IDE</title><link href="https://mavaki.github.io/blog/2024/development-boards/" rel="alternate" type="text/html" title="third-party development boards in Arduino IDE"/><published>2024-06-21T21:25:00+00:00</published><updated>2024-06-21T21:25:00+00:00</updated><id>https://mavaki.github.io/blog/2024/development-boards</id><content type="html" xml:base="https://mavaki.github.io/blog/2024/development-boards/"><![CDATA[<style>#boards{border-collapse:collapse;width:100%}#boards td,#boards th{border:1px;text-align:left;padding:8px}#boards th{padding-top:12px;padding-bottom:12px;text-align:left;background-color:#676767;color:white}</style> <p>Getting started with Arduino IDE as a newbie is relatively straightforward, but it can be difficult when you’re dealing with third-party boards that don’t work out of the box. While I managed to get most of my devices working, an <code class="language-plaintext highlighter-rouge">Adafruit Bluefruit</code> kept throwing this error at me:</p> <blockquote> <p>A fatal error occurred: Failed to connect to ESP32: No serial data received.</p> </blockquote> <p>Since it was challenging to find useful resources, I decided to write this blog post about the topic. I’m going to explain how to set up some common thiry-party boards in Arduino IDE using Linux, but the same process should apply for similar boards and different operating systems.</p> <p><br/></p> <table id="boards"> <tr> <th>Board</th> <th>Package</th> <th>URL</th> </tr> <tr> <td><a href="https://www.keyestudio.com/products/keyestudio-esp32-plus-development-board-woroom-32-module-wifibluetooth-compatible-with-arduino">Keyestudio ESP32 PLUS Development Board</a></td> <td>esp32 by Espressif Systems</td> <td>https://dl.espressif.com/dl/package_esp32_index.json</td> </tr> <tr> <td><a href="https://www.seeedstudio.com/Seeed-XIAO-ESP32C3-p-5431.html">Seeed Studio XIAO ESP32C3</a></td> <td>esp32 by Espressif Systems</td> <td>https://files.seeedstudio.com/arduino/package_seeeduino_boards_index.json</td> </tr> <tr> <td><a href="https://www.adafruit.com/product/2821">Adafruit Feather HUZZAH with ESP8266</a></td> <td>esp8266 by ESP8266 Community</td> <td>http://arduino.esp8266.com/stable/package_esp8266com_index.json</td> </tr> <tr> <td><a href="https://www.digikey.ie/en/products/detail/adafruit-industries-llc/3406/7034992">Adafruit Feather nRF52 Bluefruit LE</a></td> <td>Adafruit nRF52 by Adafruit</td> <td>https://adafruit.github.io/arduino-board-index/package_adafruit_index.json</td> </tr> </table> <p><br/></p> <p>In the <code class="language-plaintext highlighter-rouge">Board</code> column you will find the name of each board hyperlinked to the manufacturer’s site. (Note that this is not the same URL that is included in the <code class="language-plaintext highlighter-rouge">URL</code> column.) Once you have identified your board, you will need to open Arduino IDE and navigate to the <code class="language-plaintext highlighter-rouge">Boards Manager</code> (<code class="language-plaintext highlighter-rouge">Tools</code> &gt; <code class="language-plaintext highlighter-rouge">Board</code> &gt; <code class="language-plaintext highlighter-rouge">Boards Manager</code>). Then you can search for the appropriate package (listed in the <code class="language-plaintext highlighter-rouge">Package</code> column) for your board. Click <code class="language-plaintext highlighter-rouge">Install</code> and wait until the installation is complete. Finally, copy the corresponding URL from the <code class="language-plaintext highlighter-rouge">URL</code> column and open the <code class="language-plaintext highlighter-rouge">Preferences</code> menu (<code class="language-plaintext highlighter-rouge">File</code> &gt; <code class="language-plaintext highlighter-rouge">Preferences</code>), where you can paste the URL under <code class="language-plaintext highlighter-rouge">Additional boards manager URLs</code>. (This is a platform index URL that allows users to install and update platforms that are not included in the official package list.) Now you should be all set to select your device and begin programming, which I describe below.</p> <p>If you’re working with an original nRF52832 device like the <code class="language-plaintext highlighter-rouge">Adafruit Feather nRF52 Bluefruit LE</code>, you will likely need to update the bootloader. If you’re using <i>Linux</i>, you will first need to install the <code class="language-plaintext highlighter-rouge">adafruit-nrfutil</code> package. The <a href="https://aur.archlinux.org/packages/python-adafruit-nrfutil">python-adafruit-nrfutil</a> package on the AUR worked for me, but there are also instructions on <a href="https://aur.archlinux.org/packages/python-adafruit-nrfutil">Adafruit</a> for other distributions. I was then able to select <code class="language-plaintext highlighter-rouge">Tools</code> &gt; <code class="language-plaintext highlighter-rouge">Burn Bootloader</code>, which flashed my <code class="language-plaintext highlighter-rouge">Adafruit nRF52</code> and got everything running smoothly. If you experience any issues, you can refer to <a href="https://learn.adafruit.com/bluefruit-nrf52-feather-learning-guide/updating-the-bootloader">Adafruit</a>.</p> <p><br/></p> <table id="boards"> <tr> <th>Group</th> <th>Entry</th> <th>Port</th> </tr> <tr> <td>esp32</td> <td>ESP32-WROOM-DA Module</td> <td>/dev/ttyUSB0</td> </tr> <tr> <td>esp32</td> <td>XIAO_ESP32C3</td> <td>/dev/ttyACM0</td> </tr> <tr> <td>esp8266</td> <td>Adafruit Feather HUZZAH ESP8266</td> <td>/dev/ttyUSB0</td> </tr> <tr> <td>Adafruit nRF52</td> <td>Adafruit Feather nRF52832</td> <td>/dev/ttyUSB0</td> </tr> </table> <p><br/></p> <p>This table lists the information that you will need to select your board in Arduino IDE, and I’ve also included the port that I used (although yours might be different). Open <code class="language-plaintext highlighter-rouge">Tools</code> and hover over the <code class="language-plaintext highlighter-rouge">Board</code> option, where you will see the different packages that you have installed. Then refer to the <code class="language-plaintext highlighter-rouge">Group</code> and <code class="language-plaintext highlighter-rouge">Entry</code> columns to select your board. If your device is plugged in, the port should have been selected automatically, but you can also select it manually under <code class="language-plaintext highlighter-rouge">Tools</code> &gt; <code class="language-plaintext highlighter-rouge">Port</code>.</p> <p>At this point, you should be all set to get your board blinking ;) If you have any questions, feel free to leave a comment below.</p>]]></content><author><name></name></author><category term="arduino"/><category term="linux,"/><category term="research"/><summary type="html"><![CDATA[a hassel-free guide for setting up Arduino alternatives]]></summary></entry></feed>